import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.rTf5PlzF.js";const c=JSON.parse('{"title":"QuantLib Date Class","description":"QuantLib Date class provides methods to inspect dates as well as methods and operators which implement a limited date algebra (increasing and decreasing dates, and calculating their difference)","frontmatter":{"title":"QuantLib Date Class","description":"QuantLib Date class provides methods to inspect dates as well as methods and operators which implement a limited date algebra (increasing and decreasing dates, and calculating their difference)","head":[["meta",{"property":"og:title","content":"QuantLib Date Class"}],["meta",{"property":"og:description","content":"QuantLib Date class provides methods to inspect dates as well as methods and operators which implement a limited date algebra (increasing and decreasing dates, and calculating their difference)"}],["meta",{"property":"og:image","content":"/images/QuantLib.jpg"}],["meta",{"property":"og:url","content":"https://haun84.github.io/quantlib/date"}]]},"headers":[],"relativePath":"quantlib/date.md","filePath":"en/quantlib/date.md","lastUpdated":null}'),e={name:"quantlib/date.md"};function h(l,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="quantlib-date-class" tabindex="-1">QuantLib: Date Class <a class="header-anchor" href="#quantlib-date-class" aria-label="Permalink to &quot;QuantLib: Date Class&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">Language</p><ul><li><a href="/ko/quantlib/date">한국어 페이지: Korean Page</a></li></ul></div><p><code>Date</code> class provides methods to inspect dates as well as methods and operators which implement a limited date algebra (increasing and decreasing dates, and calculating their difference)</p><ul><li>providing basic information such as <code>weekday</code>, <code>day of the month</code>, <code>day of the year</code>, <code>month</code>, and <code>year</code></li><li><code>comparing two dates</code> to determine whether they are equal, or which one is the earlier or later, or the difference between them expressed in days</li><li><code>incrementing</code> or <code>decrementing</code> a date of a given number of days, or of a given period expressed in weeks, months, or years</li></ul><h2 id="date-class-overview" tabindex="-1">Date Class Overview <a class="header-anchor" href="#date-class-overview" aria-label="Permalink to &quot;Date Class Overview&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Date Class</p><ul><li><p>Before <code>evaluating the price</code> of a <code>derivatives</code>, the existence of <code>time</code> must be premised. This is because <code>underlying assets</code> and other <code>external variables</code> change over <code>time</code>, and the <code>price of derivatives</code> is also affected in the process.</p></li><li><p>Even if all variables do not change, the <code>price</code> is bound to change over <code>time</code> because <code>derivatives</code> have <code>maturity</code>.</p></li><li><p>The moment of birth and extinction of a derivatives falls on the <code>Effective Date</code> and the <code>Maturity Date</code>, and the <code>price of the derivatives</code> also changes as the <code>time</code> from the <code>Effective Date</code> to the <code>Maturity Date</code> passes day by day.</p></li><li><p>In the end, in the world of <code>derivatives</code>, it is essential to specify <code>effective</code> and <code>maturity</code> dates or <code>settlement</code> dates, and <code>QuantLib</code> has a class called <code>Date</code> to declare these dates.</p></li></ul></div><h2 id="date-class-structure" tabindex="-1">Date Class Structure <a class="header-anchor" href="#date-class-structure" aria-label="Permalink to &quot;Date Class Structure&quot;">​</a></h2><h3 id="date-class-construction-1" tabindex="-1">Date Class Construction #1 <a class="header-anchor" href="#date-class-construction-1" aria-label="Permalink to &quot;Date Class Construction #1&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Date(Day, Month, Year)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><ul><li>To enter <code>Day</code>, <code>Month</code>, and <code>Year</code> as input variables</li><li>A common and intuitive way to use it</li></ul><h3 id="date-class-construction-2" tabindex="-1">Date Class Construction #2 <a class="header-anchor" href="#date-class-construction-2" aria-label="Permalink to &quot;Date Class Construction #2&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Date(dateString, formatString)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20240630&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y%m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><ul><li>To enter date information in <code>string</code> form</li><li>It is easier to read and use date information stored in the company DB in practice than #1 when using it as it is</li></ul><h3 id="date-class-construction-3" tabindex="-1">Date Class Construction #3 <a class="header-anchor" href="#date-class-construction-3" aria-label="Permalink to &quot;Date Class Construction #3&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Date(serialNumber)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45473</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><ul><li>Similar to the method of using the date function in Excel, the method of counting by day by setting January 1, 1900 as one</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20240630&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y%m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date1)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date2)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><h2 id="date-class-functions" tabindex="-1">Date Class Functions <a class="header-anchor" href="#date-class-functions" aria-label="Permalink to &quot;Date Class Functions&quot;">​</a></h2><h3 id="member-functions" tabindex="-1">Member functions <a class="header-anchor" href="#member-functions" aria-label="Permalink to &quot;Member functions&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ISO() : ISO format, YYYY-MM-DD</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ISO format:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ISO format: 2024-06-30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># weekday() : an integer that returns the number corresponding to the week</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sunday:1 - ... - Saturday:7</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Weekday:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.weekday())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Weekday: 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dayOfMonth() : integer, the date returned is the day of the month</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day of Month:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.dayOfMonth())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Day of Month: 30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dayOfYear() : integer, the date returned is the day of the year</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day of Year:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.dayOfYear())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Day of Year: 182</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># month() : an integer that returns the month corresponding to the date</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Month:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.month())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Month: 6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># year() : an integer that returns the year corresponding to the date</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.year())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Year: 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># serialNumber() integer, the number of days corresponding to the return date </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (starting from 1899-12-31)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Serial Number:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.serialNumber())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Serial Number: 45473</span></span></code></pre></div><h3 id="static-functions" tabindex="-1">Static functions <a class="header-anchor" href="#static-functions" aria-label="Permalink to &quot;Static functions&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.todaysDate() : Date object, which returns the current date of the system.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Today:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.todaysDate())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Today: September 5th, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.minDate() : Date object, which returns the minimum date that QuantLib can represent.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Min Date:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.minDate())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Min Date: January 1st, 1901</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.maxDate() : Date object, which returns the maximum date that QuantLib can represent.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Max Date:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.maxDate())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Max Date: December 31st, 2199</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.isLeap(y) : Boolean value to determine whether y is a leap year</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Leap:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.isLeap(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Leap: True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.endOfMonth(d) : Date object, which returns the date corresponding to the end of the month where the date d is located</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;End of Month:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.endOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># End of Month: August 31st, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.isEndOfMonth(d) : Boolean value to determine whether d is at the end of the month</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Month End:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.isEndOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">29</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Month End: False</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Month End:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.isEndOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Month End: True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.nextWeekday(d, w) : Date object, which returns the date corresponding to the first week w after date d </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (for example, the first Friday after 2018-03-12)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Next WD:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.nextWeekday(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), ql.Friday))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Next WD: September 6th, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.nthWeekday(n, w, m, y) : Date object, which returns the date corresponding to the n week w in the given month m and year y </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (for example, the third Wednesday of July 2010)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;n-th WD:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.nthWeekday(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Wednesday, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># n-th WD: September 18th, 2024</span></span></code></pre></div>`,22)]))}const E=i(e,[["render",h]]);export{c as __pageData,E as default};
