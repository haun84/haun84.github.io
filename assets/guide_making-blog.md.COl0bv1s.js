import{_ as o,c as t,a3 as i,o as a}from"./chunks/framework.BRvtVtzd.js";const g=JSON.parse('{"title":"Creating a Personal Blog on Github Pages with VitePress","description":"For HaunBlog, I built the site with VitePress and hosted it on Github Pages","frontmatter":{"title":"Creating a Personal Blog on Github Pages with VitePress","description":"For HaunBlog, I built the site with VitePress and hosted it on Github Pages","head":[["meta",{"name":"keywords","content":"HaunBlog, Personal Blog, Github Pages, VitePress"}],["meta",{"property":"og:title","content":"Creating a Personal Blog on Github Pages with VitePress"}],["meta",{"property":"og:description","content":"For HaunBlog, I built the site with VitePress and hosted it on Github Pages"}],["meta",{"property":"og:image","content":"/images/haunblog.png"}],["meta",{"property":"og:url","content":"https://haun84.github.io/guide/making-blog"}]]},"headers":[],"relativePath":"guide/making-blog.md","filePath":"en/guide/making-blog.md","lastUpdated":null}'),s={name:"guide/making-blog.md"};function l(c,e,n,r,d,h){return a(),t("div",null,e[0]||(e[0]=[i('<h1 id="creating-a-personal-blog-on-github-pages-with-vitepress" tabindex="-1">Creating a Personal Blog on Github Pages with VitePress <a class="header-anchor" href="#creating-a-personal-blog-on-github-pages-with-vitepress" aria-label="Permalink to &quot;Creating a Personal Blog on Github Pages with VitePress&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">Language</p><ul><li><a href="/ko/guide/making-blog">한국어 페이지: Korean Page</a></li></ul></div><h2 id="the-process-of-creating-haunblog" tabindex="-1">The Process of Creating HaunBlog <a class="header-anchor" href="#the-process-of-creating-haunblog" aria-label="Permalink to &quot;The Process of Creating HaunBlog&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">The Process of Creating HaunBlog</p><ol><li>Use the static site generator <code>VitePress</code> to create a <code>static site</code> (<code>HaunBlog</code>).</li><li>Create a <code>URL</code> to publish HaunBlog via <code>Github Pages</code>.</li><li>Deploy HaunBlog to the <code>Github repository</code> using the <code>Deploy</code> feature. Now, HaunBlog is visible on the internet.</li><li>Register the site on <code>Algolia</code> to implement the search functionality.</li><li>Register HaunBlog&#39;s <code>sitemap</code> and <code>URL</code> in <code>Google Search Console</code> to index your content in Google&#39;s search engine.</li><li>Link HaunBlog with <code>Google Analytics</code> to analyze visitors. You can check <code>which keywords were used to find your site</code>.</li><li>Apply to <code>Google Adsense</code> to display ads and get approval. Once approved, you can <code>place ads where you want</code>.</li></ol></div><ul><li>Each of the above steps will be introduced in detail in individual pages.</li></ul><h2 id="why-i-made-a-personal-blog" tabindex="-1">Why I Made a Personal Blog <a class="header-anchor" href="#why-i-made-a-personal-blog" aria-label="Permalink to &quot;Why I Made a Personal Blog&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Why I Made a Personal Blog</p><ul><li><p>There are various <code>blog platforms</code> (<code>Naver Blog</code>, <code>Tistory</code>, <code>WordPress</code>, <code>Velog</code>, etc.) that individuals commonly use to write online.</p></li><li><p>For someone like me, with no knowledge of development, using a blog platform can be an effective way to focus solely on writing.</p></li><li><p>I then realized that by using a technology called a <a href="https://en.wikipedia.org/wiki/Static_site_generator" target="_blank" rel="noreferrer">Static Site Generator (SSG)</a>, I could quickly build a content-focused static website myself.</p></li><li><p>Out of curiosity about this new technology and a desire to create a simple, lightweight blog centered on writing rather than a flashy, visually heavy blog, I chose to build my blog as a static site rather than using a blog platform.</p></li><li><p>I learned a lot from building and refining this HaunBlog, and I want to share that experience briefly.</p></li></ul></div><h2 id="how-to-create-a-blog-yourself" tabindex="-1">How to Create a Blog Yourself <a class="header-anchor" href="#how-to-create-a-blog-yourself" aria-label="Permalink to &quot;How to Create a Blog Yourself&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">How to Create a Blog Yourself</p><ul><li>To create a blog and make it visible on the internet (this is called hosting), you need two things: <ol><li>A <code>blog to host</code> (there are various ways to create a blog website)</li><li>A <code>server to host the blog</code> (there are various hosting services available)</li></ol></li></ul></div><h2 id="how-to-create-the-blog-to-be-hosted" tabindex="-1">How to Create the Blog to Be Hosted <a class="header-anchor" href="#how-to-create-the-blog-to-be-hosted" aria-label="Permalink to &quot;How to Create the Blog to Be Hosted&quot;">​</a></h2><h3 id="choosing-the-website-format" tabindex="-1">Choosing the Website Format <a class="header-anchor" href="#choosing-the-website-format" aria-label="Permalink to &quot;Choosing the Website Format&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Choosing the Website Format</p><ul><li>First, you need to create the blog in the form of a <code>website</code> to display online.</li><li>A website typically consists of multiple <code>HTML</code> files. In the case of a blog, you can think of it as one <code>HTML file</code> per blog post.</li><li>If you had to create each HTML file manually, it would be difficult to focus on writing content.</li><li>Therefore, there are various methods to create a website, and it’s best to use the method that suits the type of website you want to build.</li><li>Since <code>HaunBlog</code> is a <code>simple, writing-centered blog</code>, I chose the <code>Static Site</code> format, where the HTML files are pre-built to always display the same content to visitors, without the need for interactions.</li></ul></div><h3 id="what-is-a-static-site" tabindex="-1">What Is a Static Site? <a class="header-anchor" href="#what-is-a-static-site" aria-label="Permalink to &quot;What Is a Static Site?&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Static Site</p><ul><li>A <code>Static Site</code> is a website composed only of <code>HTML</code>, <code>CSS</code>, and <code>JavaScript</code>.</li><li>Unlike <code>dynamic sites</code>, where the content changes based on user interactions, a static site always displays the same content, making it easier to build and faster to load.</li></ul></div><h3 id="what-is-a-static-site-generator" tabindex="-1">What Is a Static Site Generator? <a class="header-anchor" href="#what-is-a-static-site-generator" aria-label="Permalink to &quot;What Is a Static Site Generator?&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Static Site Generator</p><ul><li>A <code>Static Site Generator (SSG)</code> is a <code>framework</code> used to easily create static sites.</li><li>SSGs allow you to organize <code>folders</code>, <code>Markdown files</code>, <code>images</code>, etc., into a predefined structure, which is then combined to generate pre-built <code>HTML files</code> that can be hosted on a server.</li><li>Various SSGs exist based on different programming languages. For example, the commonly used <code>Jekyll</code> is based on <code>Ruby</code>, and <code>Gatsby</code> is based on <code>React</code>.</li><li>Although less common, there are also SSGs like <code>VuePress</code> and <code>VitePress</code>, which are based on <code>Vue</code>. Both are well-suited for building simple websites, and since <code>VitePress</code> will continue to be supported by the Vue ecosystem, I chose <code>VitePress</code> to build HaunBlog.</li><li>The method for building a static site with <code>VitePress</code> will be introduced in the next post.</li></ul></div><h2 id="server-to-host-the-site" tabindex="-1">Server to Host the Site <a class="header-anchor" href="#server-to-host-the-site" aria-label="Permalink to &quot;Server to Host the Site&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Hosting Server</p><ul><li>After building the site with a static site generator, you&#39;ll need a <code>server</code> to host it.</li><li>While you could host it on a server computer at home or use a paid hosting service, a small personal blog can be hosted for free.</li><li>One such free hosting service is <code>Github Pages</code>.</li></ul></div><div class="warning custom-block"><p class="custom-block-title">Github Pages</p><ul><li><code>Github Pages</code> allows you to host one site for free as long as you have a <code>Github account</code>.</li><li>By creating a <code>repository</code> on <code>Github</code> and uploading the built site, you can access it via <code>[your-github-username].github.io</code>. For example, <code>haun84</code> is my <code>Github username</code>, so the URL of my blog is <code>haun84.github.io</code>.</li><li>There&#39;s no need to install anything special, and the traffic capacity is more than sufficient for a personal blog, making it an excellent service.</li><li><code>Github Pages</code> natively supports the static site generator <code>Jekyll</code>. By combining <code>Jekyll + Github Pages</code>, you can easily create a blog by simply adding content and uploading it to Github, which will automatically generate the site. This makes it a convenient option for personal blogs.</li><li>However, you can use any static site generator you prefer while still taking advantage of the free hosting service. For HaunBlog, I built the site with <code>VitePress</code> and hosted it on <code>Github Pages</code>.</li><li>The process of <code>creating a domain</code> and <code>deploying</code> it on Github Pages will also be introduced in the next post.</li></ul></div>',19)]))}const b=o(s,[["render",l]]);export{g as __pageData,b as default};
